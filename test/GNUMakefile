LIB_PATHS =  \
-LC:/MinGW32/lib/gcc/mingw32/4.6.1 \
-LC:/MinGW32/lib \

# The linker options.
LIBS   = \
-lopengl32 \

# The pre-processor options used by the cpp (man cpp for more).
CPPFLAGS  = -Wall -mwindows

# The options used in linking as well as in any direct use of ld.
LDFLAGS   =

# The directories which should be added to the include path
INCDIRS = \
-IC:/MinGW32/lib/gcc/mingw32/4.6.1/include/c++ \
-IC:/MinGW32/lib/gcc/mingw32/4.6.1/include/c++/mingw32 \
-IC:/MinGW32/include \
-Iinclude \

# The executable file name.
# If not specified, current directory name or `a.out' will be used.
PROGRAM   = test.exe

## Implicit Section: change the following only when necessary.
##==========================================================================

# The source file types (headers excluded).
SRCEXTS = .cpp

# The header file types.
HDREXTS = .h .hpp

# The pre-processor and compiler options.
CPPFLAGS += -g -O2

# The C++ program compiler.
COMPILER    = g++

# The C++ program linker.
LINKER      = g++

# The command used to delete file.
RM     = rm -f

BUILDDIR   = build
SRCDIR     = src
INCLUDEDIR = include

## Stable Section: usually no need to be changed. But you can add more.
##==========================================================================
ifeq ($(PROGRAM),)
  PROGRAM = default.exe
endif
SOURCES = $(wildcard $(addprefix $(SRCDIR)/*,$(SRCEXTS)))
HEADERS = $(wildcard $(addprefix $(INCLUDEDIR)/*,$(HDREXTS)))
SRCS    = $(filter-out %.c,$(SOURCES))
OBJS    = $(foreach s,$(SOURCES),$(addsuffix .o, $(BUILDDIR)/$(notdir $(basename $(s)))))
DEPS    = $(OBJS:.o=.d)

## Define some useful variables.
DEP_OPT = -MF"$@" -MD -MM -MT"$@" -MT"$(BUILDDIR)/$(basename $(notdir $<)).o" -c $<
DEPEND      = $(COMPILER) $(INCDIRS) $(DEP_OPT)
DEPEND.d    = $(subst -g ,,$(DEPEND))
COMPILE = $(COMPILER) $(INCDIRS) $(CPPFLAGS) -c
LINK    = $(LINKER) $(CPPFLAGS) $(LDFLAGS)

.PHONY: all objs clean distclean help show

# Delete the default suffixes
.SUFFIXES:

all: $(PROGRAM)

# Rules for creating dependency files (.d).
#------------------------------------------

$(BUILDDIR)/%.d:$(SRCDIR)/%.cpp
	$(DEPEND.d)

# Rules for generating object files (.o).
#----------------------------------------
objs:$(OBJS)

$(BUILDDIR)/%.o:$(SRCDIR)/%.cpp
	$(COMPILE) $< -o $@

# Rules for generating the executable.
#-------------------------------------
$(PROGRAM):$(OBJS)
	$(LINK) $(OBJS) $(LIB_PATHS) $(LIBS) -o $@
	@echo Type ./$@ to execute the program.

sinclude $(DEPS)

clean:
	$(RM) $(OBJS) $(PROGRAM)

distclean: clean
	$(RM) $(DEPS)

# Show help.
help:
	@echo
	@echo 'Usage: make [TARGET]'
	@echo 'TARGETS:'
	@echo '  all       (=make) compile and link.'
	@echo '  NODEP=yes make without generating dependencies.'
	@echo '  objs      compile only (no linking).'
	@echo '  clean     clean objects and the executable file.'
	@echo '  distclean clean objects, the executable and dependencies.'
	@echo '  show      show variables (for debug use only).'
	@echo '  help      print this message.'
	@echo
	@echo 'Report bugs to <whyglinux AT gmail DOT com>.'

# Show variables (for debug use only.)
show:
	@echo 'PROGRAM     :' $(PROGRAM)
	@echo 'SRCDIRS     :' $(SRCDIRS)
	@echo 'HEADERS     :' $(HEADERS)
	@echo 'SOURCES     :' $(SOURCES)
	@echo 'LIBS        :' $(LIBS)
	@echo 'LIB_PATHS   :' $(LIB_PATHS)
	@echo 'SRCS        :' $(SRCS)
	@echo 'OBJS        :' $(OBJS)
	@echo 'DEPS        :' $(DEPS)
	@echo 'DEPEND      :' $(DEPEND)
	@echo 'COMPILE     :' $(COMPILE)
	@echo 'LINK        :' $(LINK)

## End of the Makefile