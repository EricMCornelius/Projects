#version 330
#extension GL_EXT_geometry_shader4 : enable

precision highp float;

layout (points) in;
layout (points) out;
layout (max_vertices = 1) out;

in VertexData
{
    vec4 color;
    vec3 velocity;
    float time;
} vertex [];

out FragmentData
{
    vec4 color;
} fragment;

uniform mat4 mvpMatrix;

void main(void)
{
    vec4 position = gl_in[0].gl_Position;
    position += vec4(vertex[0].velocity * vertex[0].time, 1.0);
	position[1] -= 4.0 * vertex[0].time * vertex[0].time;
    fragment.color = vertex[0].color;
    fragment.color *= pow(clamp(1.0f - vertex[0].time, 0.0f, 1.0f), 4.0);
    gl_Position = mvpMatrix * position;
	EmitVertex();
    EndPrimitive;
}